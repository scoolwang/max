
<template>
  <scroll-view class="page">
    <picker mode="selector" range="{{sexlist}}" range-key="name" value="" bindchange="sexChange">
      <view  class="cell">
        <text class="cell-label">性别</text>
        <view class="cell-right">
          <text class="cell-value {{!sex ? 'empty-value': ''}}">{{sex || '请设置'}}</text>
          <text class="iconfont icon-arrow-right icon"></text>
        </view>
      </view>
    </picker>
    <picker mode="selector" range="{{levellist}}" range-key="name" value="" bindchange="levelChange">
      <view  class="cell">
        <text class="cell-label">段位</text>
        <view class="cell-right">
          <text class="cell-value {{!level ? 'empty-value': ''}}">{{level || '请设置'}}</text>
          <text class="iconfont icon-arrow-right icon"></text>
        </view>
      </view>
    </picker>
    <!-- <picker class="picker" bindchange="ageChange" mode="date">
      <view class="cell">
        <text class="cell-label">年龄</text>
        <view class="cell-right">
          <text class="cell-value {{!age?'empty-value': ''}}">{{age || '请设置'}}</text>
          <text class="iconfont icon-arrow-right icon"></text>
        </view>
      </view>
    </picker> -->
    <view class="upload-cell">
      <view class="header">
        <text>资质图</text>

        <view class="cell-right" bindtap="showViews">
          <text class="iconfont icon-image image-icon"></text>
          <text class="tip">示例</text>
        </view>
      </view>
      <view class="tip-text">封面截图需要清晰显示游戏ID和段位</view>
      <view class="body">
        <view class="upload-area" bindtap="uploadImg" wx:if="{{imgSrc===''}}">
          <text class="iconfont icon-image icon-upload"></text>
          <text class="tip-upload">上传图片{{imgSrc}}</text>
        </view>
        <view class="upload-area" wx:else bindtap="uploadImg">
          <image src="{{imgSrc}}" class="upload-img" mode="scaleToFil" />
        </view>
      </view>
    </view>
    <view class="upload-cell">
      <view class="header">
        <text>语音</text>
      </view>
      <view class="tip-text">录制一段自我介绍的语音</view>
      <view class="body">
        <view class="upload-area" bindtap="openRecord" wx:if="{{!voidSrc}}">
          <text class="iconfont icon-mai icon-upload"></text>
          <text class="tip-upload">录制语音</text>
        </view>
        <view class="void-area" wx:else>
          <view class="void" bindtap="playerVoid">
            <text class="iconfont icon-stop icon-stop-item" wx:if="{{playInfo.status===1}}"></text>
            <text class="iconfont icon-play icon-play-item" wx:else></text>
            <progress percent="{{playInfo.percent}}" class="progress" stroke-width="3" activeColor="#fff" backgroundColor="rgba(103, 103, 103, 0.8)" active="{{true}}" active-mode="forwards"/>
            <text class="void-second">{{voidSrcTime}}'</text>
          </view>
          <!-- <view class="reset-void">重新录制</view> -->
          <view class="reset-void" bindtap="clearVoid">
              <text class="iconfont icon-close icon-close-item"></text>
          </view>
        </view>
      </view>
    </view>
    <view class="upload-cell">
      <view class="header">
        <text>自我介绍</text>
      </view>
      <view class="body">
        <area limit="30" placeholder="技能描述" value="{{desc}}" bind:change="descChange"></area>
      </view>
    </view>
  </scroll-view>
  <view class="button" bindtap="submit">提交</view>
  <view class="cover" catchtouchmove="coverTouch" wx:if="{{showModal}}">
      <view class="modal">
        <view class="modal-close" bindtap="closeRecord">
          <text class="iconfont icon-close close-icon"></text>
        </view>
        <view class="modal-content">
          <view class="start-time">00:{{timer >= 10 ? timer : '0' + timer}}</view>
          <view class="record-tip">最长30秒</view>
          <!-- <view bindtap="player">播放音频</view>
          <view bindtap="upLoad">上传音频</view> -->
          <view class="void-content">

            <view class="reset"  bindtap="resetRecord" wx:if="{{voidStatus===2 || voidStatus===3}}">
              <text class="iconfont icon-reset"></text>
            </view>
            <view class="play"  bindtap="player" wx:if="{{voidStatus===2}}">
              <text class="iconfont icon-play"></text>
            </view>
            <view class="play"  bindtap="suspend" wx:if="{{voidStatus===3}}">
              <text class="iconfont icon-stop"></text>
            </view>
            <view class="record {{voidStatus===1 ? 'recording': ''}}" bindlongpress="startRecord" wx:if="{{voidStatus===1 || voidStatus===0}}" bindtouchend="stopRecord">
              <text class="iconfont icon-record"></text>
            </view>
            <view class="save" wx:if="{{voidStatus===2 || voidStatus===3}}" bindtap="sureRecord">
              <text class="iconfont icon-gou"></text>
            </view>
          </view>
        </view>
      </view>
  </view>
</template>
<style>
  page {
    background: #f8f8f8;
  }
  .page {
    padding-bottom: 70px;
  }
  .cell {
    display: flex;
    align-items: center;
    background: #fff;
    height: 45px;
    padding: 0 15px;
    margin-top: 25px;
    flex-direction: row;

  }
  .picker {
    width: 100%;
    display: block;
  }

  .cell .icon {
    position:relative;
    font-size:14px;
    font-weight:bolder;
    color:#ccc;

  }
  .cell-right {
    flex: 1;
    justify-content: flex-end;
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  .cell-value {
    padding-right: 10px;
    font-size: 14px;
  }
  .empty-value {
    color: #ebebeb;
    font-size: 14px;
  }
  .cell-label {
    font-size: 14px;
  }
  .upload-cell {
    background: #fff;
    padding: 10px 15px;
    margin-top: 25px;
    height: 185px;
  }
  .header {
    display: flex;
  }
  .header text {
    font-size: 14px;
  }
  .image-icon {
    color: #1D7EEF;
    margin-right: 5px;
  }
  .tip {
    color: #ccc;
  }
  .upload-area {
    width: 80px;
    height: 80px;
    border: 1px dashed #ccc;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .upload-img  {
    width: 80px;
    height: 80px;
  }
  .body {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 15px;
    margin-bottom: 15px;
  }
  .icon-upload {
    color: #1D7EEF;
    font-size: 20px;
  }
  .tip-text {
    font-size: 12px;
    color: #ccc;
    margin: 15px 0;
    text-align: center;
  }
  .tip-upload {
    font-size: 10px;
    margin-top: 5px;
    color: #ccc;
  }
  .button {
    position: fixed;
    width: 100%;
    bottom: 0;
    height: 50px;
    line-height: 50px;
    text-align: center;
    font-size: 14px;
    color: #fff;
    letter-spacing: 2px;
    background: #1D7EEF;
  }
  /** 遮罩 */
  .cover {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0, 0, 0, 0.5);
  }
  .modal {
    margin:0 25px;
    background: #fff;
    width: 100%;
    padding: 15px;
    opacity: 1;
    border-radius: 3px;
    position: relative;
    min-height: 100px;
  }
  .modal-close {
    width: 0;
    height: 0;
    border: 15px solid #1D7EEF;
    border-left: 15px solid transparent;
    border-bottom: 15px solid transparent;
    position: absolute;
    right: 0;
    top: 0;
    border-top-right-radius: 3px;
  }
  .close-icon {
    color:#fff;
    position:absolute;
    top:-13px;
    right:-13px;
    font-size:12px;
    font-weight:bold;
  }
  /** 录音 */
  .void-content {
    display: flex;
    justify-content: space-around;
    align-items: center;
    padding-bottom: 35px;
    padding-top: 35px;
  }
  .reset, .save {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border: 1px solid #1D7EEF;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .reset text {

    color: #1D7EEF;
    font-size: 20px;
  }
  .save {
    background: #1D7EEF;
  }
  .save text {
    color: #fff;
    font-size: 20px;
  }
  .record, .play {
    width: 50px;
    height: 55px;
    border-radius: 50%;
    background: #1D7EEF;
    display: flex;
    align-items: center;
    justify-content: center;

  }
  .record text, .play text {
    font-size: 30px;
    color: #fff;
  }
  .recording {
    box-shadow: 0px 0px 3px 3px rgba(29, 126, 239, 0.3);
  }
  .start-time {
    text-align: center;
    margin-top: 20px;
    font-size: 16px;
  }
  .record-tip {
    text-align: center;
    font-size: 12px;
    color: #ccc;
  }
  .void {
    width: 120px;
    display: flex;
    height: 25px;
    align-items: center;
    background: rgba(29, 126, 239, 0.8);
    border-radius: 15px;
    padding: 0 15px;
  }
  .progress {
    flex: 1;
    border-radius: 2px;
  }
  .void-second {
    font-size: 12px;
    color: #fff;
    margin-left: 5px;
  }
  .icon-stop-item {
    color: #fff;
    font-size: 20px;
    font-weight: bolder;
    margin-left: -10px;
  }
  .icon-play-item {
    color: #fff;
    margin-left: -6px;
    font-size: 16px;
  }
  .void-area {
    display: flex;
    height: 80px;
    align-items: center;
  }
  .reset-void {
    height: 25px;
    font-size: 10px;
    color: #1D7EEF;
    border: 1px solid #E1E1E1;
    line-height: 25px;
    border-radius: 13px;
    width: 25px;
    text-align: center;
    letter-spacing: 1px;
    border-radius: 50%;
    margin-left: 10px;
    background: #fff;
    margin-right: -35px;
  }
  .icon-close-item {
    margin-right: -2px;
  }
</style>
<script>
import wexp from 'wexp/index'
import { uploadImg, uploadVoid } from '../mixins/common'
// import {rootUrl} from '../mixins/config.js'
import {addAuth, getGameInfo, getUserAuth} from '../mixins/api.js'
// const qiniuUploader = require('../mixins/qiniuUploader')
const recorderManager = wx.getRecorderManager()
const innerAudioContext = wx.createInnerAudioContext()
const palyVoidContext = wx.createInnerAudioContext()
// const palyVoidContext = wx.createInnerAudioContext()
export default class extends wexp.page {
  config = {
    "navigationBarTitleText": "发布活动",
    "enablePullDownRefresh": false,
    "backgroundTextStyle": "dark",
    "backgroundColor": "#f8f8f8",
    "onReachBottomDistance": 50,
    "usingComponents": {
      "area": "../components/TextArea",
      "k-toast": "kai-ui/toast/index"
    }
  }
  data = {
    voidSrc: '',
    voidSrcTime: 0,
    recordSrc: '',
    timer: 0,
    timerServer: '',
    voidStatus: 0,  // 0 未开始； 1 正在录音 2 录制完成 3 试听
    showModal: true,
    imgSrc: '',
    sex: '',
    sexId: '',
    level: '',
    levelId: '',
    views: '',
    desc: '', // 技能描述
    playInfo: {
      status: 0,
      time: 0,
      percent: 0
    },
    sexlist: [
      {
        name: '男',
        key: 1
      },
      {
        name: '女',
        key: 2
      }
    ],
    levellist: [
      {
        name: '卫士',
        key: 1
      },
      {
        name: '先锋',
        key: 2
      },
      {
        name: '传奇',
        key: 3
      },
      {
        name: '万古',
        key: 4
      }
    ],
    gameId:  ''
  }
  initPlayer () {
    palyVoidContext.onPlay((res) => {
      this.setData({
        'playInfo.status': 1
      })
    })
    palyVoidContext.onPause((res) => {
      this.setData({
        'playInfo.status': 0
      })
    })
    palyVoidContext.onStop((res) => {
      this.setData({
        'playInfo.status': 0
      })
    })
    palyVoidContext.onEnded((res) => {
      this.setData({
        'playInfo.status': 0,
        'playInfo.percent': 100
      })
    })
    palyVoidContext.onTimeUpdate((res) => {
      console.log(palyVoidContext.duration)
      this.setData({
        'playInfo.time': Math.floor(palyVoidContext.currentTime),
        'playInfo.percent': palyVoidContext.currentTime / palyVoidContext.duration * 100
      })
    })
  }
  initRecod () {
    innerAudioContext.onPlay((res) => {
      console.log('innerAudioContext播放')
    })
    recorderManager.onStop((res) => {
      innerAudioContext.src = res.tempFilePath
      // innerAudioContext.src = 'http://peqep4fsa.bkt.clouddn.com/tmp_9e928dd11c493be462440ad9c2f01cd1.m4a'

      this.setData({
        recordSrc: res.tempFilePath
      })
      console.log(res)
      console.log(innerAudioContext)
      console.log('监听结束录音')
    })
  }
  onLoad (opt) {
    let user = wx.getStorageSync('userInfo')
    wx.getSetting({
      success (res) {
        console.log(res)
      }
    })
    this.initPlayer()
    this.initRecod()
    this.setData({
      gameId: opt.gameId
    })
    if (opt.isEdit) {
      getUserAuth({
        gameId: opt.gameId,
        userId: user.userId
      }).then(res => {
        let data = res.data
        this.setData({
          voidSrc: data.voidSrc,
          imgSrc: data.gameImg,
          sexId: data.sex,
          sex: data.sex === 2 ? '女' : '男',
          levelId: data.levelId,
          level: data.levelName,
          desc: data.detail
        })
      })
    }
    getGameInfo({
      id: opt.gameId
    }).then(res => {
      let data = res.data
      let list = []
      for (let item of data.levels)  {
        list.push({
          key: item.id,
          name: item.levelName,
          img: item.levelImg
        })
      }
      this.setData({
        views: data.gameViews,
        levellist: list
      })
    })
  }
  valid () {
    if (this.data.sex === '') {
      return '请选择性别'
    }
    if (!this.data.age === '') {
      return '请选择性别'
    }
    if (!this.data.imgSrc) {
      return '请上传资质图'
    }
    if (!this.data.voidSrc) {
      return '请选择录制一段语音'
    }
    return true
  }
  ages (str) {
    var r = str.match(/^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/)
    if (r == null) {
      return false
    }
    var d = new Date(r[1], r[3] - 1, r[4])
    if (d.getFullYear() === r[1] && (d.getMonth() + 1) === r[3] && d.getDate() === r[4]) {
      var Y = new Date().getFullYear()
      var age = Y - r[1]
      return age
    }
  }
  methods = {
    coverTouch () {},
    descChange (e) {
      this.setData({
        desc: e.detail
      })
    },
    showViews () {
      wx.previewImage({
        urls: [this.data.views],
        current: this.data.views
      })
    },
    /** 提交 */
    submit () {
      let error = this.valid()
      if (error !== true) {
        wx.showToast({
          title: error,
          icon: 'none'
        })
        return
      }
      addAuth({
        gameId: this.data.gameId,
        voidSrc: this.data.voidSrc,
        voidTime: this.data.voidSrcTime,
        gameImg: this.data.imgSrc,
        sex: this.data.sexId,
        levelId: this.data.levelId,
        desc: this.data.desc
      }).then((res) => {
        if (res.code === '200') {
          wx.showToast({
            title: '提交成功',
            icon: 'success'
          })
          wx.redirectTo({
            url: 'authResult'
          })
        }
      })
      // wx.redirectTo({
      //   url: 'authResult'
      // })
      // let pms = uploadVoid(this.data.voidSrc)
      // pms.then((res) => {
      //   let age = this.ages(this.data.age)
      //   addAuth({
      //     gameId: 1,
      //     voidSrc: res.imageURL,
      //     gameImg: this.data.imgSrc,
      //     sex: this.data.sex,
      //     levelId: this.data.level,
      //     desc: this.data.desc
      //   }).then((res) => {
      //     if (res.code === '200') {
      //       wx.showToast({
      //         title: '提交成功',
      //         icon: 'success'
      //       })
      //       wx.redirectTo({
      //         url: 'authResult'
      //       })
      //     }
      //   })
      // })
    },
    /** 性别 */
    sexChange (res) {
      let sexObj = this.data.sexlist[res.detail.value]
      this.setData({
        sex: sexObj.name,
        sexId: sexObj.key
      })
    },
    /** 性别 */
    levelChange (res) {
      debugger
      let level = this.data.levellist[res.detail.value]
      this.setData({
        level: level.name,
        levelId: level.key
      })
    },
    /** 年龄 */
    ageChange (res) {
      this.setData({
        age: res.detail.value
      })
    },
    /** 打开录音弹窗 */
    openRecord () {
      this.setData({
        showModal: true
      })
    },
    /** 关闭录音弹窗 */
    closeRecord () {
      this.setData({
        showModal: false
      })
    },
    /** 开始录音 */
    startRecord () {
      recorderManager.start()
      let timer = setInterval(() => {
        let time = Number(this.data.timer)
        let newTime = time + 1
        if (newTime === 20) {
          recorderManager.stop()
        }
        if (newTime > 20) {
          clearInterval(this.data.timerServer)
          return
        }
        console.log(newTime)
        this.setData({
          timer: newTime
        })
      }, 1000)
      this.setData({
        timerServer: timer,
        voidStatus: 1
      })
      console.log('开始录音')
    },
    /** 停止录音 */
    stopRecord () {
      recorderManager.stop()
      this.setData({
        voidStatus: 2
      })
      clearInterval(this.data.timerServer)
      console.log('结束录音')
    },
    /** 重新录音 */
    resetRecord () {
      this.setData({
        voidStatus: 0,
        timer: 0
      })
    },
    // 上传音频到服务端
    upLoad () {
      // 初始化
      let pms = uploadVoid(this.data.voidSrc)
      pms.then((res) => {
        console.log('上传成功过')
      })
    },
    // 录音确定结束
    sureRecord () {
      palyVoidContext.src = this.data.recordSrc
      innerAudioContext.stop()
      this.setData({
        showModal: false,
        voidSrc: this.data.recordSrc,
        voidStatus: 0,
        voidSrcTime: this.data.timer
      })
    },
    /** 试听录音 */
    player () {
      innerAudioContext.play()
      this.setData({
        voidStatus: 3
      })
      innerAudioContext.onEnded((res) => {
        console.log('录音播放结束')
        this.setData({
          voidStatus: 2
        })
      })
    },
    suspend () {
      innerAudioContext.stop()
      this.setData({
        voidStatus: 2
      })
    },
    /** 播放录好的音频 */
    playerVoid () {
      if (this.data.playInfo.status === 0) {
        palyVoidContext.play()
      } else {
        palyVoidContext.pause()
      }
    },
    /** 上传图片 */
    uploadImg () {
      let that = this
      // 选择图片
      wx.chooseImage({
        count: 1,
        success: function (res) {
          console.log(res)
          var filePath = res.tempFilePaths[0]
          console.log(res.tempFilePath)
          // 交给七牛上传
          wx.showLoading({
            mask: true
          })
          let pms = uploadImg(filePath)
          pms.then((resUp) => {
            that.setData({
              imgSrc: resUp.imageUrl.imageURL
            })
            wx.hideLoading()
            console.log(res)
          }).catch(() => {
            wx.hideLoading()
          })
        }
      })
    },
    /** 删除录音 */
    clearVoid () {
      this.setData({
        voidSrc: '',
        recordSrc: '',
        voidStatus: 0,
        timer: 0
      })
    }
  }
}
</script>

