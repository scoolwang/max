<template>
<view class="page">
  <view class="row">
    <input type="text" placeholder="请输入手机号" bindinput="change" data-key="account" />
  </view>
  <view class="row">
    <input type="text" password=true placeholder="请输入密码" bindinput="change" data-key="pwd" />
  </view>
  <view class="tip">此活动只限于哇哈哈内部人员参与, 请先登录账号，绑定微信</view>
  <button type="primary" bindtap="login">登录</button>
</view>
<toast id="toast" />
</template>
<style>
  .page {
    margin-top: 30px;
    padding: 0 20px;
  }
  input {
    border-bottom: 1px solid #f4f4f3;
    padding: 10px;
    font-size: 14px;
  }
  .row {
    margin-bottom: 15px;
  }
  .tip {
    color: #c9c9c9;
    font-size: 12px;
  }
  button {
    margin-top: 30px;
  }
</style>
<script>
  import wexp from 'wexp/index'
  import {getUserInfo, formatTime} from '../../mixins/common.js'
  import WXBizDataCrypt from '../../mixins/WXBizDataCrypt.js'
  import {getMsg} from '../../mixins/api.js'
  import {appid} from '../../mixins/config.js'
  import Toast from 'kai-ui/toast/index'

  let fileSystemManager = wx.getFileSystemManager()
  const db = wx.cloud.database()
  const _ = db.command
  export default class extends wexp.page {
    config = {
      "navigationBarTitleText": "登录",
      "enablePullDownRefresh": true,
      "backgroundTextStyle": "#333",
      "backgroundColor": "#f8f8f8",
      "onReachBottomDistance": 50,
      "usingComponents": {
        "area": "../components/TextArea",
        "toast": "kai-ui/toast/index"
      }
    }
    data = {
      list: [],
      ap: {},
      userInfo: {}
    }
    methods = {
      change (e) {
        let key = e.currentTarget.dataset.key
        let obj = this.data.ap
        let val = e.detail.value
        obj[key] = val
        this.setData({
          ap: obj
        })
        console.log(obj)
      },
      login () {
        db.collection('user').where({
          account: _.eq(this.data.ap.account),
          pwd: _.eq(this.data.ap.pwd)
        }).get().then(res => {
          if (res.data.length <= 0) {
            Toast.error({
              content: '账户和密码不正确'
            })
          } else {
            wx.cloud.callFunction({
              name: 'bindWx',
              data: {
                account: this.data.ap.account,
                img: this.data.userInfo.avatarUrl,
                nick: this.data.userInfo.nickName
              },
              success: res => {
                Toast.success({
                  content: '登录成功'
                })
                this.$route('navigate', './foot', {})
              },
              fail: res => {
                Toast.error({
                  content: res.errMsg
                })
              }
            })
            // db.collection('user').doc('XByMYYnnuWjciuhn').update({
            //   data: {
            //     openId: this.data.userInfo.openId
            //   }
            // }).then(res => {
            //   console.log(res)
            // })
          }
        })
      }
    }
    onPullDownRefresh () {
      console.log('刷新1')
    }
    isTody (d) {
     var td = new Date()
     td=new Date(td.getFullYear(),td.getMonth(),td.getDate())
     var od = new Date(d)
     od=new Date(od.getFullYear(),od.getMonth(),od.getDate())
     var xc = (od-td)/1000/60/60/24
     return xc
    }
    onLoad () {
      let that = this
      Toast.init('toast')
    }
  }
</script>
