<template>
<view class="page">
    <view class="auth-module">
      <view class="auth-list">

        <view class="type-box" wx:if="{{item.status==0&&item.gameId!=6}}" wx:for="{{authList}}" wx:key="{{index}}" data-obj="{{item}}" bind:tap="linkGame">
          <view class="type">
            <image. mode="aspectFit" src="{{item.logo}}?1" />
          </view>
          <text class="type-name">{{item.gameName}}</text>
        </view>
      </view>
    </view>

</view>

</template>
<style lang="less">
  page {
    background: #fff;
  }
  .content {
    position: relative;
    top: -30px;
    border-top-right-radius: 30px;
    border-top-left-radius: 30px;
    background: #fff;
    overflow: hidden;
  }
  .auth-list {
    background: #fff;
    display: flex;
    margin-bottom: 20px;
    flex-wrap: wrap;
    padding-left: 20px;
    padding-top: 20px;
    /*justify-content: center;*/
  }
  .auth-module {
    background: #fff;
  }
  .type {
    /*background: #C63939;*/
    border-radius: 50%;
    width: 50px;
    height: 50px;
    text-align: center;
    /*line-height: 32px;*/
    image {
      width: 100%;
      height: 100%;
    }
  }
  .type-name {
    font-size:9px;
    font-family:PingFangSC-Light;
    font-weight:300;
    color:rgba(255,255,255,1);
    background: #5AA3F9;
    border-radius: 2px;
    padding: 0 5px;
  }
  .add-auth {
    /*border: 1px solid  #f5f5f5;*/
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 70px;
    height: 70px;
    background: #f7f7f7;
    view {
      font-weight: bold;
      color: #333;
    }
  }
  .unauth .type-name {
    background: #D3D3D3;
  }
  .waiting .type-name {
    background: #8B572A;
  }
  .type-box {
    /*padding: 10px 20px;*/
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: calc(25% - 20px);
    height: 78px;
    margin-right: 20px;
    background: #f7f7f7;
    border-radius: 5px;
    margin-bottom: 15px;
  }
  .active-type-box {
    background: #f7f7f7;
  }
  .type-icon {
    color: #fff;
  }
  .link {
    background: #fff;
    display: flex;
    justify-content: space-between;
    align-content: center;
    height: 40px;
    padding: 0 20px;
    line-height: 40px;
    border-bottom: 1px solid #f3f3f3;
    view {
      font-size:14px;
      font-family:PingFangSC-Medium;
      font-weight:500;
      color:rgba(0,0,0,1);
    }
    text {
      font-size:12px;
      font-family:FontAwesome;
      color:rgba(191,191,191,1);
    }
  }
  .title {
    font-size:14px;
    font-family:PingFangSC-Medium;
    font-weight:500;
    color:rgba(0,0,0,1);
    padding: 10px 20px;
  }

  .cover-top {
    position: relative;
    height: 250px;
    width: 100%;
    .edit-btn {
      color: #fff;
      font-size: 20px;
      position: absolute;
      top: 15px;
      right: 15px;
      text {
        font-size: 20px;
        font-weight: bold;
      }
    }
    .other-info {
      display: flex;
      justify-content: space-between;
      padding: 0 20px;
    }
    .desc {
      font-size:12px;
      font-family:PingFangSC-Medium;
      font-weight:500;
      color:rgba(255,255,255,1);
      margin-top: 15px;
      padding: 0 20px;
    }
    image {
      width: 100%;
      height: 100%;
    }
    .cover-bottom {
      position: absolute;
      bottom: 30px;
      left: 0;
      right: 0;
      padding: 20px 0;
      .city {
        font-size:12px;
        font-family:PingFangSC-Medium;
        font-weight:500;
        color:rgba(255,255,255,1);
      }
    }
  }
  .user {
    display: flex;
    padding: 15px 20px;
    .user-header {
      height: 40px;
      width: 40px;

      image {
        width: 100%;
        height: 100%;
        border-radius: 5px;
      }
    }
    .user-info {
      flex: 1;
      overflow:hidden;
      display: flex;
      flex-direction: column;
      justify-content: space-between;

    }
    .level {
      height: 24px;
      width: 30px;
      image {
        height: 100%;
        width: 100%;
      }
    }
    .user-other {
      display: flex;
      justify-content: space-between;
      .create-time {
        font-size:12px;
        font-family:PingFangSC-Regular;
        font-weight:400;
        color:rgba(155,155,155,1);
      }
    }
    .user-nick {
      display: flex;
      .nick-txt {
        flex: 1;
        font-size:13px;
        font-family:PingFangSC-Medium;
        font-weight:500;
        color: #fff;
        width:100%;

      }
    }
  }


</style>
<script>
  import wexp from 'wexp/index'
  import {getAuth,  getUser, getUserAuthGame} from '../mixins/api.js'
  export default class extends wexp.page {
    config = {
      "navigationBarTitleText": "认证结果",
      "enablePullDownRefresh": false,
      "backgroundTextStyle": "dark",
      "backgroundColor": "#FAFAFA",
      "onReachBottomDistance": 50,
      "usingComponents": {
        "sex": "../components/sex",
        "void": "../components/void"
      }
    }
    data = {
      nick: '九妹',
      user: {},
      authList: [],
      width: ''
    }
    methods = {
      linkAuth () {
        this.$route('navigate', './auth')
      },
      linkGame (e) {
        let obj = e.currentTarget.dataset.obj
        let status = obj.status
        let gameId = obj.id
        obj.userId = this.data.user.id
        if (status === 1 ) {
          this.$route('navigate', './game', obj)
        }
        if (status === 0 ) {
          this.$route('navigate', './auth', obj)
        }
        if (status === 2 ) {
          this.$route('navigate', './authResult', obj)
        }
      },
      linkInfo () {
        this.$route('navigate', './editUser', this.data.user)
      },
      linkActy () {
        this.$route('navigate', './myActivity', {userId: this.data.user.id})
      },
      linkSend () {
        this.$route('navigate', './mySend')
      }
    }
    onShow () {
      getUser().then(res => {
        this.setData({
          user: res.data
        })
        getAuth({
          userId: res.data.id
        }).then(res => {
          this.setData({
            authList: res.data
          })
        })
      })
    }
    onLoad () {
      this.setData({
        width: wx.getSystemInfoSync().windowWidth
      })
      // getUser().then(res => {
      //   this.setData({
      //     user: res.data
      //   })
      //   getAuth({
      //     userId: res.data.id
      //   }).then(res => {
      //     this.setData({
      //       authList: res.data
      //     })
      //   })
      // })
    }
  }
</script>
