<template>
  <view  wx:for="{{list}}" wx:key="{{index}}">

    <card class="module" item="{{item}}" bindcancel="cancel"  data-key>
    </card>
  </view>
  <confirm show="{{modalShow}}" bindclose="closeConfirm" bindok="send">
    <view class="confirm-view">
      <input class="send-input" maxlength="20" placeholder-class="input-placeholder" placeholder="留言" bindinput="inputChange" />
    </view>
  </confirm>
</template>
<script>
  import Tab from 'kai-ui/tab/index'
  import wexp from 'wexp/index'
  import {getJoin, recallJoin} from '../mixins/api.js'
  import {formatTime} from '../mixins/common.js'
  export default class extends wexp.page {
    config = {
      "navigationBarTitleText": "我的申请",
      "enablePullDownRefresh": false,
      "backgroundTextStyle": "dark",
      "backgroundColor": "#FAFAFA",
      "onReachBottomDistance": 50,
      "usingComponents": {
        "confirm": "../components/confirm",
        "card": "../components/myjoin"
      }
    }
    data = {
      modalShow: false,
      comment: '',
      list: []
    }
    methods = {
      linkDetail () {
        this.$route('navigate', './activity')
      },
      send () {
        wx.showToast({
          icon: 'none',
          title: '已申请'
        })
        this.setData({
          modalShow: false
        })
      },
      closeConfirm () {
        this.setData({
          comment: ''
        })
      },
      inputChange (e) {
        let val = e.detail.value
        this.setData({
          'comment': val
        })
      },
      cancel (e) {
        let obj = e.currentTarget.dataset.obj
        let status = obj.status
        if (status === 3) {
          recallJoin({
            activityId: obj.id,
            id: obj.passengerId
          })
          wx.showToast({
            icon: 'none',
            title: '已取消'
          })
        } else {
          this.setData({
            modalShow: true
          })
        }
      },
      comment () {
        this.$route('navigate', './editCmt')
      }
    }

    onLoad () {
      getJoin({
        page: 1,
        pageSize: 10
      }).then(res => {
        let list = res.data
        for (let item of list) {
          let startTime = formatTime(item.startTime)
          item.startTime = startTime.isTody ? (startTime.h + ':' + startTime.m) : startTime.y + '-' + startTime.m + '-' + startTime.d + ' ' +  startTime.h + ':' + startTime.mt
          item.createTime = formatTime(item.createTime).str
          // item.level = this.formatLevel(item.level)
          item.level = ''
          item.passenger = item.seat - item.vacancy
          let imgs = item.cover ? item.cover.split(',') : []
          for (let idx in imgs) {
            let url = imgs[idx]
            var params = {}
            url.replace(/([^?&]+)=([^&]+)/g, (_,k,v) => params[k]=v)
            let wh = params.wh ? params.wh.split(':') : []
            let width = wh[0]
            let screen = wx.getSystemInfoSync().windowWidth - 20
            width = width > screen ? screen : width
            imgs[idx] = {
              url: url,
              width: width
            }
          }
          item.cover = imgs
        }
        this.setData({
          list: list
        })
      })
    }
  }
</script>
<style lang="less">
page {
  background: #fafafa;
}
.item {
  background: #fff;
  margin: 20px 0;
}
.user-info {
  display: flex;
  padding: 13px 20px;
  border-bottom: 1px solid #F3F3F3;
  .header image {
    width: 45px;
    height: 45px;
    border-radius: 5px;
  }
  .header {
    width: 45px;
    height: 45px;
    margin-right: 18px;
  }
  .item-info {
    flex: 1px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    .button {
      height:20px;
      background:rgba(74,144,226,1);
      border-radius:2px;
      line-height: 20px;
      color: #fff;
      padding: 0 10px;
      font-size:12px;
      font-family:PingFangSC-Medium;
      font-weight:500;
      color:rgba(255,255,255,1);
    }
    .comment-btn {
      background: #6EBC14;
    }
  }
  .inner {
    display: flex;
    justify-content: space-between;
    line-height: 20px;
    .left-inner {
      display: flex;
    }
    .bus-info {
      margin-left: 25px;
    }
    view {
      font-size:12px;
      font-family:PingFangSC-Medium;
      font-weight:500;
      color:rgba(155,155,155,1);
    }
    .unagree {
      font-size:12px;
      font-family:PingFangSC-Medium;
      font-weight:500;
      color:rgba(139,87,42,1);
    }
    .agree {
      font-size:12px;
      font-family:PingFangSC-Medium;
      font-weight:500;
      color:rgba(65,117,5,1);
    }
  }
  .bus-info {
    display: flex;
    .iconfont {
      font-size: 12px;
    }
    .user-num {
      margin-right: 25px;
    }
  }
}
.desc {
  padding: 13px 20px;
  font-size:12px;
  font-family:PingFangSC-Medium;
  font-weight:500;
  color:rgba(155,155,155,1);
}
  .send-input {
    height:33px;
    font-size:14px;
    background:rgba(242,242,242,1);
    border-radius:3px;
    padding: 0 10px;
    line-height: 33px;
  }
  .confirm-view {
    padding: 20px 20px;
    width: 250px;
  }
</style>
