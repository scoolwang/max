<template>
  <view class="avatar">
    <view class="label">头像</view>
    <view class="image">
      <view class="image-inner" bindtap="upLoad">
        <image bindload="imgLoad" mode="aspectFill" src="{{avatar}}" alt="">
      </view>
    </view>
  </view>
  <view class="link" bind:tap="linkList" data-name="editNick" data-val="{{nick}}">
    <view class="label">昵称</view>
    <view class="text">{{nick}}</view>
    <text class="iconfont icon-arrow-right"></text>
  </view>
  <view class="link" bind:tap="linkList" data-name="editAge" data-val="{{age}}">
    <view class="label">年龄</view>
    <view class="text">{{age}}</view>
    <text class="iconfont icon-arrow-right"></text>
  </view>
  <view class="link" bind:tap="linkList" data-name="editInfo" data-val="{{info}}">
    <view class="label">签名</view>
    <view class="text">{{info}}</view>
    <text class="iconfont icon-arrow-right"></text>
  </view>
</template>
<style lang="less">
  page {
    background: #fafafa;
  }
  .avatar {
    padding: 20px;
    background: #fff;
    margin: 20px 0;
    .label {
      font-size:16px;
      font-family:PingFangSC-Medium;
      font-weight:500;
      color:rgba(184,184,184,1);
    }
    .image-inner {
      width: 150px;
      height: 150px;
      image {
        width: 100%;
        height: 100%;
        border-radius: 5px;
      }
    }
    .image {
      display: flex;
      justify-content: center;
    }
  }

  .link {
    background: #fff;
    display: flex;
    justify-content: space-between;
    align-content: center;
    border-bottom: 1px solid #f3f3f3;
    height: 40px;
    padding: 0 20px;
    line-height: 40px;
    view {
      font-size:14px;
      font-family:PingFangSC-Medium;
      font-weight:500;
      color:rgba(0,0,0,1);
    }
    .text {
      flex: 1;
      white-space:nowrap;
      overflow:hidden;
      text-overflow:ellipsis;
      width:100%;
      text-align: left;
    }
    .label {
      font-size:16px;
      font-family:PingFangSC-Medium;
      font-weight:500;
      color:rgba(184,184,184,1);
      padding-right: 30px;
    }
    text {
      font-size:12px;
      font-family:FontAwesome;
      color:rgba(191,191,191,1);
    }
  }
</style>
<script>
  import wexp from 'wexp/index'
  import {updateUser} from '../mixins/api.js'
  import { uploadImg } from '../mixins/common'
  export default class extends wexp.page {
    config = {
      "navigationBarTitleText": "编辑个人资料",
      "enablePullDownRefresh": false,
      "backgroundTextStyle": "dark",
      "backgroundColor": "#FAFAFA",
      "onReachBottomDistance": 50,
      "usingComponents": {
        "sex": "../components/sex",
        "void": "../components/void"
      }
    }
    data = {
      nick: '',
      age: 22,
      info: '',
      avatar: ''
    }
    methods = {
      linkList (e) {
        let name = e.currentTarget.dataset.name
        let val = e.currentTarget.dataset.val
        console.log(e)
        this.$route('navigate', './' + name, {value: val})
      },
      imgLoad (e) {
        var width = e.detail.width,//图片宽度
        height = e.detail.height
        let idx = e.target.dataset.idx
        let data = this.data.avatar
        updateUser({
          avatarUrl: data
        })
      },
      upLoad () {
        var that = this
        wx.chooseImage({
          count: 1,
          success: function (res) {
            console.log(res)
            var filePath = res.tempFilePaths[0]
            // 交给七牛上传
            wx.showLoading({
              mask: true
            })
            let pms = uploadImg(filePath)
            pms.then(function (e)  {
              wx.hideLoading()
              that.setData({
                avatar: e.imageUrl.imageURL
              })
              wx.hideLoading()
            })
            // pms.then((resUp) => {
            //   that.setData({
            //     imgSrc: resUp.imageURL + '?imageView2/2/w/80/h/80'
            //   })
            //   wx.hideLoading()
            //   console.log(res)
            // }).catch(() => {
            //   wx.hideLoading()
            // })
          }
        })
      }
    }
    onLoad (opt) {
      let user = opt

      this.setData({
        age: user.age,
        nick: user.name,
        avatar: user.avatarUrl,
        info: user.motto
      })
    }
  }
</script>
