
<template>
  <scroll-view class="page">
    <view>
      <view class="title">车型</view>
      <view class="item swiper-item" wx:if="{{games.length > 0}}">
        <swiper display-multiple-items="4"  current="{{swiperCurrent}}">
          <block wx:for="{{games}}" wx:key="id">
            <swiper-item class="dota type-box" catch:tap="selectGame" data-id="{{item.id}}"  data-name="{{item.name}}">
              <view class="game-box {{params.gameId==item.id?'active-game-box':''}}">
                <view class="logo-box">
                  <image class="game-logo" src="{{item.logo}}" />
                </view>

                <text class="type-name">{{item.name}}</text>
              </view>

            </swiper-item>
          </block>
        </swiper>
      </view>
    </view>
    <view>
      <view class="title">发车时间</view>
      <view class="item">

        <text class="iconfont icon-date1 item-icon"></text>
        <picker mode="date" value="{{date}}" start="{{startDate}}" bindchange="bindDateChange">
          <view class="picker {{date?'input':''}}">
            {{date || '选择日期'}}
          </view>
        </picker>
        <text class="iconfont icon-clock item-icon item-icon-clock"></text>
        <picker mode="time" value="{{time}}" bindchange="bindTimeChange">
          <view class="picker {{time?'input':''}}">
            {{time || '选择时间'}}
          </view>
        </picker>
        <text class="iconfont icon-close item-icon item-icon-cancel" bindtap="clearTime"></text>
        <!-- <label class="checkbox">
          <checkbox name="ck" value="2" checked="true"/>
        </label> -->
        <!-- <input disabled=true class="input" placeholder="请选择时间" placeholder-class="holder-text" /> -->
      </view>

    </view>
    <!-- <view>
      <view class="title">发车地点</view>
      <view class="item">
        <text class="iconfont icon-location item-icon"></text>
        <picker mode="region" bindchange="bindRegionChange" value="{{region}}" custom-item="" fields="month">
          <view class="picker {{region[1]?'input':''}}">
            {{region[1] || '所在城市' }}
          </view>
        </picker>
      </view>
    </view> -->
    <view>
      <view class="title">车位</view>
      <view class="item">
        <text class="iconfont icon-group item-icon"></text>
        <input class="input site-input" type="number" placeholder-class="holder-text" bindinput="limitInput" value="{{params.seat}}" />
        <text class="site-unit">人</text>
      </view>
    </view>
    <view>
      <view class="title">标题</view>
      <view class="item" style="display: block">
        <!-- <area value="{{params.desc}}" ></area> -->
        <area value="{{title}}" type="input"  custom-class="input-item" placeholder="" bind:change="titleChange" limit="{{30}}"></area>
        <!-- <textarea value="{{}}" maxlength=10 class="input desc-area" placeholder="说点什么" placeholder-class="holder-text" /> -->
      </view>
    </view>
    <view>
      <view class="title">描述</view>
      <view class="item">
        <!-- <area value="{{params.desc}}" ></area> -->
        <area value="{{desc}}" type="textarea" placeholder="说点什么" bind:change="descChange" limit="{{limit}}"></area>
        <!-- <textarea value="{{}}" maxlength=10 class="input desc-area" placeholder="说点什么" placeholder-class="holder-text" /> -->
      </view>
    </view>
    <view>
      <view class="title">图片</view>
      <view class="item cover-item">
        <view class="img-show" wx:for="{{imgs}}" wx:key="{{index}}">
          <image bindload="imgLoad" data-idx="{{index}}" mode="aspectFill" src="{{item}}" />
          <view class="del" catchtap="delImg" data-idx="{{index}}"><view class="iconfont icon-del-circle"></view></view>
        </view>
        <view class="select-area img-show" catchtap="upLoad" wx:if="{{imgs.length < 3}}">
          <view class="iconfont icon-add"></view>
        </view>
      </view>
    </view>
    <cover-view class="primary-button" catchtap="submit">发布</cover-view>
  </scroll-view>

</template>
<script>
import wexp from 'wexp/index'
import { getUserInfo } from '../mixins/common'
import {rootUrl} from '../mixins/config.js'
import {addActivity, getGameList} from '../mixins/api.js'
import { uploadImg } from '../mixins/common'
const qiniuUploader = require('../mixins/qiniuUploader')
export default class Index extends wexp.page {
  config = {
    "navigationBarTitleText": "发布活动",
    "enablePullDownRefresh": false,
    "backgroundTextStyle": "dark",
    "backgroundColor": "#eeeeee",
    "onReachBottomDistance": 50,
    "usingComponents": {
      "area": "../components/TextArea"
    }
  }

  data = {
    userinfo: {},
    date: '',
    startDate: '',
    endDate: '',
    time: '',
    region: [],
    cover: '',
    limit: 200,
    desc: '',
    title: '',
    startTime: '',
    imgs: [],
    imgsList: [],
    games: [],
    swiperCurrent: 0,
    params: {
      gameId: '',
      startTime: '',
      limit: 1,
      desc: '',
      title: '',
      cover: ''
    }
  }

  onLoad (opt) {
    let gameId = opt.gameId
    this.setData({
      'params.gameId': gameId
    })
    this.initPicker()
    this.getAddrss()
    getGameList().then(res => {
      let swiperCurrent =  this.data.swiperCurrent
      for (let index in res.data) {
        let item = res.data[index]
        if ((item.id + '') ===  this.data.params.gameId) {
          swiperCurrent = (index - 0) + 1
        }
      }
      console.log(Math.ceil(swiperCurrent / 4) - 1)
      this.setData({
        games: res.data,
        swiperCurrent: Math.ceil(swiperCurrent / 4)
      })
      // setTimeout(() => {
      //   this.setData({
      //     swiperCurrent: 2
      //   })
      // }, 5000)
    })
    // this.$on('change', (val) => {
    //   this.params.desc = val
    // })
    getUserInfo().then((info) => {
      // this.userinfo = info
      // this.cover = info.avatarUrl
      this.setData({
        cover: info.avatarUrl
      })
      // this.setData('cover', '')
      // this.cover = ''
    })
  }

  initPicker () {
    const time = new Date()
    const year = time.getFullYear()
    const day = time.getDate()
    const month = time.getMonth() + 1
    let mn = time.getMinutes()
    mn = (mn < 10) ? 0 + mn : mn
    // if (minute < 10) {
    //   console.log(66666)
    // }
    // mn = (mn <= 10) ? 0 + mn : mn
    // if (mn < 10) {
    //   mn = '0' + mn
    // }
    this.setData({
      startDate: year + '-' + month + '-' + day,
      startTime: time.getHours() + ':' + mn
    })
  }

  getAddrss () {
    let that = this
    wx.getLocation({
      success (res) {
        var log = res.longitude
        var lat = res.latitude
        console.log(lat)
        console.log(log)
        wx.request({
          // url: 'https://api.map.baidu.com/geocoder/v2/?ak=DQNYwj5Nv3Hg6TBNaCmth9n0l47EIKRb&location=' + lat + ',' + log + '&output=json',
          url: 'https://api.map.baidu.com/geocoder/v2/',
          // _unintercept: true,
          data: {
            location: lat + ',' + log,
            output: 'json',
            ak: 'DQNYwj5Nv3Hg6TBNaCmth9n0l47EIKRb'
          },
          success (res) {
            let ads = res.data.result.addressComponent
            that.setData({
              region: [ads.province, ads.city]
            })
            // that.$apply()
            // that.region = [ads.province, ads.city]
          },
          complete (res) {
            console.log(res)
          }
        })
      }
    })
  }

  methods = {
    selectGame (e) {
      let id = e.currentTarget.dataset.id
      this.setData({
        'params.gameId': id
      })
    },
    /** 删除图片 */
    delImg (e) {
      let idx = e.currentTarget.dataset.idx
      let imgs = this.data.imgs
      imgs.splice(idx, 1)
      this.setData({
        imgs: imgs
      })
      console.log(imgs)
    },
    imgLoad (e) {
      var width = e.detail.width,//图片宽度
      height = e.detail.height
      let idx = e.target.dataset.idx
      let data = this.data.imgs
      data[idx] += '?wh=' + width + ':' + height
      this.setData({
        imgsList: data
      })
    },
    descChange (b) {
      console.log(b)
      this.setData({
        'params.desc': b.detail
      })
    },
    titleChange (b) {
      console.log(b)
      this.setData({
        'params.title': b.detail
      })
    },
    limitInput (b) {
      this.setData({
        'params.seat': b.detail.value
      })
    },
    bindDateChange (res) {
      this.setData({
        date: res.detail.value
      })
      // this.date = res.detail.value
      console.log('时间日期',res.detail.value)
    },
    bindTimeChange (res) {
      this.setData({
        time: res.detail.value
      })
      console.log(res)
      console.log('时间',res.detail.value)
    },
    bindRegionChange (res) {
      this.setData({
        region: res.detail.value
      })
      // this.region = res.detail.value
      console.log(res)
    },
    clearTime () {
      this.setData({
        date: '',
        time: ''
      })
    },
    upLoad () {
      var that = this
      wx.chooseImage({
        count: 3 - this.data.imgs.length,
        success: function (res) {
          console.log(res)
          var filePath = res.tempFilePaths
          // 交给七牛上传
          wx.showLoading({
            mask: true
          })
          let pmsList = []
          for (let url of filePath) {
            let pms = uploadImg(url)
            pmsList.push(pms)
          }
          Promise.all(pmsList).then(function (e)  {
            console.log(e, '参数')
            let urls = []
            for (let imgObj of e) {
              console.log(imgObj)
              urls.push(imgObj.imageUrl.imageURL)
            }
            wx.hideLoading()
            let imgs = that.data.imgs.concat(urls)
            that.setData({
              imgs: imgs
            })

            wx.hideLoading()
          })
          // pms.then((resUp) => {
          //   that.setData({
          //     imgSrc: resUp.imageURL + '?imageView2/2/w/80/h/80'
          //   })
          //   wx.hideLoading()
          //   console.log(res)
          // }).catch(() => {
          //   wx.hideLoading()
          // })
        }
      })
    },
    submit () {
      let startTime
      let title = this.data.params.title.trim()
      console.log(this.data.time)
      if (this.data.date === '') {
        if (this.data.time !== '') {
          wx.showToast({
            title: '请选择日期',
            icon: 'none'
          })
          return
        } else {
          startTime = ''
        }
      } else {
        if (this.data.time === '') {
          wx.showToast({
            title: '请选择时间',
            icon: 'none'
          })
          return
        } else {
          let date = this.data.date.split('-')
          let time = this.data.time.split(':')
          console.log(startTime)
          startTime = new Date(date[0], date[1] - 1, date[2], time[0], time[1], 0).getTime()
          const nowTime = new Date().getTime()
          if (nowTime > startTime) {
            wx.showToast({
              title: '发车时间不能早于当前时间',
              icon: 'none'
            })
            return
          }
        }
      }
      if (title <= 0) {
        wx.showToast({
          title: '请输入标题',
          icon: 'none'
        })
        return
      }
      console.log(this.data.date)
      console.log(this.data.time)
      this.setData({
        params: {
          startTime: startTime,
          // city: this.data.region[1] || '',
          cover: this.data.imgsList.join(','),
          desc: this.data.params.desc,
          title: this.data.params.title,
          seat: this.data.params.seat,
          gameId: this.data.params.gameId
        }
      })
      addActivity(this.data.params).then((res) => {
        wx.showToast({
          title: '发布成功',
          icon: 'success'
        })
        this.$route('navigater', './activity', {
          id: res.data
        })
      })
    }
  }
}
</script>
<style lang="less" >
  page {
    background: #f8f8f8;
  }

  .input-item  {
    input {
      padding-right: 40px;
    }
  }
  .del {
    position: absolute;
    right: -8px;
    top: -12px;

    width: 20px;
    height: 20px;
    view {
      font-size: 20px;
      color: red;
    }
  }
  .img-show {
    width: 100px;
    height: 100px;
    position: relative;
    margin-right: 15px;
    background: #fff;

    image {
      width: 100%;
      height: 100%;

    }
  }
  .title {
    margin: 15px 0;
    color: #000;
    font-size: 14px;
    font-weight: Regular;
    padding-left: 25px;
  }
  .item {
    background-color: #fff;
    padding: 10px 25px;
    display: flex;
    align-items: center;
    position: relative;
  }
  .item-icon {
    color: #b9b9b9;
    font-size: 16px;
    margin-right: 15px;
  }
  .holder-text {
    font-size: 14px;
    color: #ebebeb;
/*    font-weight: lighter;
*/  }
  .tag {
    font-size: 10px;
/*    font-weight: lighter;
*/    color: #fff;
    background: #C77F3F;
    border-radius: 2px;
    height: 20px;
    line-height: 20px;
    padding: 0 5px;
  }
  .site-unit {
    font-size: 14px;
    color: #EBEBEB;
/*    font-weight: lighter;
*/  }
  .desc-area {
    height: 90px;
  }
  .upload-img, .upload-box {
    width: 100px;
    height: 120px;
  }
  .cover-item {
    padding: 20px 20px;
    align-items: center;
  }
  .primary-button {
    background: #4A90E2;
    height: 50px;
    line-height: 50px;
    border-radius: 0;
    font-size: 18px;
    letter-spacing: 1px;
    color: #fff;
    text-align: center;
    position: fixed;
    width: 100%;
    bottom: 0;
  }
  .page {
    padding-bottom: 70px;
  }
  .picker {
    font-size: 14px;
    width: 100px;
    height: 16px;
    color: #ebebeb;
    line-height: 16px;
    /*font-weight: lighter;*/
  }
  .item-icon-clock {
    margin-left: 20px;
  }
  .item-icon-cancel {
    position: absolute;
    right: 0;
  }
  checkbox {
    position: absolute;
    right: 0;
  }
  checkbox .wx-checkbox-input{
     width: 30rpx; /* 背景的宽 */
     height: 30rpx; /* 背景的高 */
  }
  /* 选中后的 背景样式 （红色背景 无边框 可根据UI需求自己修改） */
  checkbox .wx-checkbox-input.wx-checkbox-input-checked{
     border: none;
     /*background: red;*/
  }
  /* 选中后的 对勾样式 （白色对勾 可根据UI需求自己修改） */
  checkbox .wx-checkbox-input.wx-checkbox-input-checked::before{
     border-radius: 50%;/* 圆角 */
     width: 20rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
     height: 20rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
     line-height: 20rpx;
     text-align: center;
     font-size:22px; /* 对勾大小 30rpx */
     /*color:#fff;  对勾颜色 白色 */
     background: transparent;
     /*transform:translate(-50%, -50%) scale(1);*/
     /*-webkit-transform:translate(-50%, -50%) scale(1);*/
  }
  .input {
    flex: 1;
    font-size: 14px;
    color: #333;
  }
  .site-input {
    width: 20px;
    /*background-color: red;*/
    flex: none;
  }
  .select-area {
    display: flex;
    justify-content: center;
    align-items: center;
    background: #f3f3f3;
  }
  swiper {
    height: 55px;

  }
  .game-logo {
    width: 30px;
    height: 30px;
    image {
      width: 100%;
      height: 100%;
    }
  }
  .type-name {
    font-size: 10px;
    color: #333;
  }
  .game-box {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transition: background 0.5s;
    height: 55px;
    box-sizing: border-box;
    padding: 3px 0 10px 0;
  }
  .swiper-item {
    display: block;
    padding: 0;
  }
  .active-game-box {
    background: #4A90E2;
    .type-name {
      color: #fff;
    }
  }
</style>
