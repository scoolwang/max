<template>
<view class="page">
  <view class="msg-row" wx:for="{{list}}" wx:key="time" bindtap="toChat" data-id="{{item.userId}}" catchtap="link">
    <view class="header">
      <image class="avatar" src="{{item.avatarUrl}}" />
    </view>
    <view class="content">
      <view class="row top-row">
        <view class="nick">{{item.name}}</view>
      </view>
      <view class="row">
        <view class="msg">{{item.motto}}</view>
      </view>
    </view>
  </view>
  <view wx:if="{{list.length <=0}}" class="empty">
    <image src="../image/logo.png" alt="">
    <text>空空如也</text>

  </view>
</view>

</template>
<style lang="less">
  .page {
    padding-top: 15px;
  }
  .avatar {
    width: 50px;
    height: 50px;
    border-radius: 5px;
  }
  .msg-row {
    display: flex;
    margin: 0 15px;
    padding-bottom: 15px;
    margin-bottom: 15px;
    border-bottom: 1px solid #EAE7E7;
  }
  .header {
    position: relative;
    margin-right: 15px;

  }
  .row {
    display: flex;
    justify-content: space-between;
  }
  .nick {
    font-size: 14px;
  }
  .time, .msg {
    font-size: 12px;
    color: #999;
  }
  .msg {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    flex: 1;
    /*width: 100%;*/
  }
  .top-row {
    margin-bottom: 10px;
  }
  .content {
    flex: 1;
    overflow: hidden;
  }
  .empty {
    text-align: center;
    color:#989898;
    font-size: 12px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: absolute;
    width: 100%;
    top: 100px;
    bottom: 100px;
    image {
      width: 46px;
      height: 10px;
      opacity: 0.3;
      margin-bottom: 10px;
    }
  }
</style>
<script>
  import wexp from 'wexp/index'
  import {getUserInfo, formatTime} from '../mixins/common.js'
  import {getCare} from '../mixins/api.js'
  export default class extends wexp.page {
    config = {
      "navigationBarTitleText": "消息",
      "enablePullDownRefresh": false,
      "backgroundColor": "#f8f8f8",
      "onReachBottomDistance": 50,
      "usingComponents": {
        "area": "../components/TextArea"
      }
    }
    data = {
      list: []
    }
    methods = {
      link (e) {
        let id = e.currentTarget.dataset.id
        this.$route('navigate', './userHome', {id: id})
      }
    }

    onLoad (opt) {
      let userId = wx.getStorageSync('userInfo').userId
      getCare({
        userId: userId
      }).then(res => {
        this.setData({
          list: res.data
        })
      })
    }
  }
</script>

